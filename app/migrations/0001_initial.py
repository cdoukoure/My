# Generated by Django 2.0.1 on 2018-04-28 03:49

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.query_utils
import django.utils.timezone
import mptt.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('technical-super', 'Technical Super Administrator'), ('technical-admin', 'Technical Administrator'), ('technical-support', 'Technical Support'), ('school-super', 'School Super Administrator'), ('school-admin', 'School Administrator'), ('school-staff', 'School staff'), ('school-teacher', 'School teacher'), ('school-student', 'Student')], default='school-student', max_length=20)),
                ('referral_code', models.CharField(default='', max_length=9, verbose_name='Referral Code')),
                ('parent_referral_code', models.CharField(blank=True, max_length=9, null=True, verbose_name='Parent Referral Code')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('text', 'Text'), ('textarea', 'Text zone'), ('number', 'Number'), ('checkbox', 'Checkboxe (for many options with multi choices)'), ('radio', 'Radio button (for many options with single choice. Up to 3 options)'), ('select', 'Radio button (for many options with single choice. More than 3 options)'), ('date', 'Date (Calendar)')], default='text', max_length=100)),
                ('name', models.CharField(max_length=30)),
                ('label', models.CharField(max_length=30)),
                ('options', models.TextField(blank=True, null=True)),
                ('nullable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='MyActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(verbose_name='Date')),
            ],
        ),
        migrations.CreateModel(
            name='MyActivityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='MyAdmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('middle_name', models.CharField(max_length=128, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=128, verbose_name='Last Name')),
                ('admission_date', models.DateTimeField(verbose_name='Admission Date')),
                ('application_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Application Date')),
                ('birth_date', models.DateTimeField(verbose_name='Birth Date')),
                ('street', models.CharField(max_length=256, verbose_name='Street')),
                ('street2', models.CharField(max_length=256, verbose_name='Street2')),
                ('phone', models.CharField(max_length=16, verbose_name='Phone')),
                ('mobile', models.CharField(max_length=16, verbose_name='Mobile')),
                ('email', models.EmailField(max_length=255, verbose_name='email address')),
                ('city', models.CharField(max_length=64, verbose_name='City')),
                ('zip', models.CharField(max_length=8, verbose_name='Zip')),
                ('fees', models.FloatField(verbose_name='Fees')),
                ('photo', models.BinaryField(verbose_name='Photo')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('confirm', 'Confirmed'), ('payment_process', 'Payment Process'), ('fees_paid', 'Fees Paid'), ('reject', 'Rejected'), ('pending', 'Pending'), ('cancel', 'Cancelled'), ('done', 'Done')], default='draft', max_length=15, verbose_name='Status')),
                ('due_date', models.DateTimeField(verbose_name='Due Date')),
                ('prev_institute', models.CharField(max_length=256, verbose_name='Previous Institute')),
                ('prev_result', models.CharField(max_length=256, verbose_name='Previous Result')),
                ('family_business', models.CharField(max_length=256, verbose_name='Family Business')),
                ('family_income', models.FloatField(verbose_name='Family Income')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6, verbose_name='Gender')),
                ('nbr', models.PositiveIntegerField(editable=False, verbose_name='No of Admission')),
            ],
        ),
        migrations.CreateModel(
            name='MyAdmissionRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
                ('min_count', models.PositiveIntegerField(verbose_name='Minimum No. of Admission')),
                ('max_count', models.PositiveIntegerField(default=30, verbose_name='Maximum No. of Admission')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('confirm', 'Confirmed'), ('cancel', 'Cancelled'), ('application', 'Application Gathering'), ('admission', 'Admission Process'), ('done', 'Done')], default='draft', max_length=11, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='MyAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=256, verbose_name='Code')),
            ],
        ),
        migrations.CreateModel(
            name='MyAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='Name')),
                ('marks', models.FloatField(verbose_name='Marks')),
                ('description', models.TextField(verbose_name='Description')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('publish', 'Published'), ('finish', 'Finished')], default='draft', max_length=7, verbose_name='Status')),
                ('issued_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Issued Date')),
                ('submission_date', models.DateTimeField(verbose_name='Submission Date')),
            ],
        ),
        migrations.CreateModel(
            name='MyAssignmentSubLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submit', 'Submitted'), ('reject', 'Rejected'), ('change', 'Change Req.'), ('accept', 'Accepted')], default='draft', max_length=7, verbose_name='Status')),
                ('submission_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Submission Date')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_sub_lines', to='app.MyAssignment', verbose_name='Assignment')),
            ],
        ),
        migrations.CreateModel(
            name='MyAssignmentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('code', models.CharField(max_length=4, verbose_name='Code')),
            ],
        ),
        migrations.CreateModel(
            name='MyBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=32)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
            ],
        ),
        migrations.CreateModel(
            name='MyClassroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='Name')),
                ('code', models.CharField(max_length=4, verbose_name='Code')),
                ('capacity', models.PositiveIntegerField(verbose_name='No of Person')),
            ],
        ),
        migrations.CreateModel(
            name='MyCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('code', models.CharField(max_length=8, verbose_name='Code')),
                ('section', models.CharField(max_length=32, verbose_name='Section')),
                ('evaluation_type', models.CharField(choices=[('normal', 'Normal'), ('GPA', 'GPA'), ('CWA', 'CWA'), ('CCE', 'CCE')], default='normal', max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='MyExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_code', models.CharField(max_length=8, verbose_name='Exam Code')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
                ('state', models.CharField(choices=[('new', 'New Exam'), ('schedule', 'Scheduled'), ('held', 'Held'), ('cancel', 'Cancelled'), ('done', 'Done')], default='new', max_length=8)),
                ('note', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('name', models.CharField(max_length=256, verbose_name='Exam')),
                ('total_marks', models.FloatField(verbose_name='Total Marks')),
                ('min_marks', models.FloatField(verbose_name='Passing Marks')),
            ],
        ),
        migrations.CreateModel(
            name='MyExamAttendees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent')], default='present', max_length=8)),
                ('marks', models.FloatField(verbose_name='Marks')),
                ('note', models.TextField(blank=True, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams_attendees', to='app.MyExam', verbose_name='Exam')),
            ],
        ),
        migrations.CreateModel(
            name='MyExamResAllocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MyExamRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('capacity', models.PositiveIntegerField(verbose_name='Capacity')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_rooms', to='app.MyClassroom', verbose_name='Classroom')),
                ('courses', models.ManyToManyField(related_name='exam_rooms', to='app.MyCourse', verbose_name='Course(s)')),
            ],
        ),
        migrations.CreateModel(
            name='MyExamSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Exam')),
                ('exam_code', models.CharField(max_length=8, verbose_name='Exam Code')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_sessions', to='app.MyBatch', verbose_name='Batch')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_sessions', to='app.MyCourse', verbose_name='Course')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_sessions', to='app.MyExamRoom', verbose_name='Room')),
            ],
        ),
        migrations.CreateModel(
            name='MyExamType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('code', models.CharField(max_length=4, verbose_name='Code')),
            ],
        ),
        migrations.CreateModel(
            name='MyFacility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='Name')),
                ('code', models.CharField(max_length=4, verbose_name='Code')),
            ],
        ),
        migrations.CreateModel(
            name='MyFacilityLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(verbose_name='Quantity')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facility_lines', to='app.MyClassroom', verbose_name='Classroom')),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facility_lines', to='app.MyFacility', verbose_name='Facility')),
            ],
        ),
        migrations.CreateModel(
            name='MyMarksheetLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_marks', models.FloatField(verbose_name='Total Marks')),
                ('total_per', models.FloatField(verbose_name='Total Percentage')),
                ('result', models.CharField(max_length=256, verbose_name='Result')),
            ],
        ),
        migrations.CreateModel(
            name='MyMarksheetRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generated_date', models.DateTimeField(verbose_name='Generated Date')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('validated', 'Validated'), ('cancelled', 'Cancelled')], default='draft', max_length=9)),
                ('total_pass', models.FloatField(verbose_name='Total Pass')),
                ('total_failed', models.FloatField(verbose_name='Total Fail')),
                ('name', models.CharField(max_length=256, verbose_name='Marksheet Register')),
                ('exam_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marksheet_registers', to='app.MyExamSession', verbose_name='Exam')),
            ],
        ),
        migrations.CreateModel(
            name='MyMinClearCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('number', models.FloatField(max_length=5, verbose_name='Number of Failed Subject')),
                ('result', models.CharField(max_length=5, verbose_name='Result to Display')),
            ],
        ),
        migrations.CreateModel(
            name='MyOnlineCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('subtitle', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('is_free', models.BooleanField(default=False, verbose_name='Is free')),
                ('price', models.FloatField(max_length=5)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('rejected', 'Rejected'), ('change', 'Change Req.'), ('accepted', 'Accepted')], default='draft', max_length=7, verbose_name='Status')),
                ('rate', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MyOnlineQuizQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('singlechoice', 'Single choice'), ('multichoices', 'Multi choices'), ('code', 'Code'), ('text', 'Text or number response')], default='singlechoice', max_length=12, verbose_name='Type')),
                ('question', models.CharField(max_length=255, verbose_name='Question')),
                ('point', models.FloatField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='MyOnlineResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(max_length=255, verbose_name='Answer')),
                ('is_right', models.BooleanField(default=False, verbose_name='Correct answer')),
                ('note', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='app.MyOnlineQuizQuestion')),
            ],
        ),
        migrations.CreateModel(
            name='MyOnlineSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='app.MyOnlineCourse')),
            ],
        ),
        migrations.CreateModel(
            name='MyOnlineSessionOrQuiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('type', models.CharField(choices=[('session', 'Session'), ('quiz', 'quiz')], default='session', max_length=7, verbose_name='Status')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_or_quizs', to='app.MyOnlineSection')),
            ],
        ),
        migrations.CreateModel(
            name='MyOnlineSessionRessource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('link', models.URLField()),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ressources', to='app.MyOnlineSessionOrQuiz')),
            ],
        ),
        migrations.CreateModel(
            name='MyOnlineSessionTrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('srclang', models.TextField()),
                ('link', models.URLField()),
                ('ressource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='app.MyOnlineSessionRessource')),
            ],
        ),
        migrations.CreateModel(
            name='MyOrganisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('ref', models.CharField(db_index=True, max_length=128, verbose_name='Internal Reference')),
                ('vat', models.CharField(blank=True, max_length=18, null=True, verbose_name='Tax Identification Number')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website of Partner or Company')),
                ('comment', models.TextField(verbose_name='Notes')),
                ('credit_limit', models.FloatField(verbose_name='Credit Limit')),
                ('barcode', models.CharField(max_length=128, verbose_name='ean13')),
                ('active', models.BooleanField(default=True)),
                ('street', models.CharField(max_length=128)),
                ('street2', models.CharField(max_length=128)),
                ('zip', models.CharField(max_length=6)),
                ('city', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='email address')),
                ('mobile_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True)),
                ('organisation_type', models.CharField(choices=[('primary-school', 'Primary school'), ('secondary-school', 'Secondary school'), ('high-school', 'High school'), ('university', 'University')], default='high-school', max_length=17)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='children', to='app.MyOrganisation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MyPassStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('number', models.FloatField(max_length=5, verbose_name='Minimum Percentage')),
                ('result', models.CharField(max_length=5, verbose_name='Result to Display')),
            ],
        ),
        migrations.CreateModel(
            name='MyPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='Name')),
                ('hour', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12')], default='8', max_length=2, verbose_name='Hours')),
                ('minute', models.CharField(choices=[('00', '00'), ('15', '15'), ('30', '30'), ('45', '45')], default='00', max_length=2, verbose_name='Minute')),
                ('am_pm', models.CharField(choices=[('am', 'AM'), ('pm', 'PM')], default='am', max_length=2, verbose_name='AM/PM')),
                ('duration', models.FloatField(verbose_name='Duration')),
                ('sequence', models.PositiveIntegerField(verbose_name='Sequence')),
            ],
        ),
        migrations.CreateModel(
            name='MyRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='app.MyOnlineCourse')),
            ],
        ),
        migrations.CreateModel(
            name='MyResultExamLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weightage', models.FloatField(verbose_name='Weightage')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result_exam_lines', to='app.MyExam', verbose_name='Exam')),
            ],
        ),
        migrations.CreateModel(
            name='MyResultLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.FloatField(verbose_name='Marks')),
                ('percentage', models.FloatField(verbose_name='Percentage')),
                ('status', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail')], default='pass', max_length=4)),
                ('total_marks', models.FloatField(verbose_name='Percentage')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result_lines', to='app.MyExam', verbose_name='Marksheet Line')),
                ('exam_tmpl', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tmpl_result_lines', to='app.MyResultExamLine', verbose_name='Exam Template')),
                ('marksheet_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result_lines', to='app.MyMarksheetLine', verbose_name='Marksheet Line')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='m_result_lines', to='app.MyMarksheetLine', verbose_name='Marksheet Line')),
            ],
        ),
        migrations.CreateModel(
            name='MyResultTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('result_date', models.DateTimeField(verbose_name='Result Date')),
                ('criterias', models.ManyToManyField(related_name='result_templates', to='app.MyMinClearCriteria', verbose_name='Minimum Qualification Criteria')),
                ('exam_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result_templates', to='app.MyExamSession', verbose_name='Exam Session')),
                ('pass_status', models.ManyToManyField(related_name='result_templates', to='app.MyPassStatus', verbose_name='Pass Status')),
            ],
        ),
        migrations.CreateModel(
            name='MyResultTemplateLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detailed_report', models.BooleanField(verbose_name='Detailed Report')),
                ('exam_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result_template_lines', to='app.MyExamSession', verbose_name='Exam Session')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result_template_lines', to='app.MyResultTemplate', verbose_name='Result Template')),
            ],
        ),
        migrations.CreateModel(
            name='MyScholarship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('confirm', 'Confirm'), ('reject', 'Reject')], default='draft', max_length=7, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='MyScholarshipType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('amount', models.IntegerField(verbose_name='Amount')),
            ],
        ),
        migrations.CreateModel(
            name='MySkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='app.MyOnlineCourse')),
            ],
        ),
        migrations.CreateModel(
            name='MyStudentAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='app.MyOnlineResponse')),
            ],
        ),
        migrations.CreateModel(
            name='MySubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('code', models.CharField(max_length=256, verbose_name='Code')),
                ('grade_weightage', models.FloatField(verbose_name='Grade Weightage')),
                ('type', models.CharField(choices=[('theory', 'Theory'), ('practical', 'Practical'), ('both', 'Both'), ('other', 'Other')], default='theory', max_length=9)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subjects', to='app.MyCourse')),
            ],
        ),
        migrations.CreateModel(
            name='MyTakenSessionOrQuiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('score', models.FloatField()),
                ('session_or_quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taken_session_or_quizs', to='app.MyOnlineSessionOrQuiz')),
            ],
        ),
        migrations.CreateModel(
            name='MyTimetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
                ('color', models.CharField(max_length=7, verbose_name='Color Index')),
                ('type', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], default='draft', max_length=9, verbose_name='Days')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='b_timetables', to='app.MyBatch', verbose_name='Batch')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetables', to='app.MyCourse', verbose_name='Course')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetables', to='app.MyPeriod', verbose_name='Period')),
            ],
        ),
        migrations.CreateModel(
            name='Row',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cells', models.ManyToManyField(related_name='_row_cells_+', through='app.Cell', to='app.Column')),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MyPartner',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='partner', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('middle_name', models.CharField(max_length=128)),
                ('last_name', models.CharField(max_length=128)),
                ('birth_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de naissance')),
                ('blood_group', models.CharField(choices=[('A+', 'A+ve'), ('B+', 'B+ve'), ('O+', 'O+ve'), ('AB+', 'AB+ve'), ('A-', 'A-ve'), ('B-', 'B-ve'), ('O-', 'O-ve'), ('AB-', 'AB-ve')], default='O-', max_length=5)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default='male', max_length=6)),
                ('visa_info', models.CharField(blank=True, max_length=64, null=True)),
                ('id_number', models.CharField(max_length=64)),
                ('street', models.CharField(max_length=128)),
                ('street2', models.CharField(max_length=128)),
                ('zip', models.CharField(max_length=128)),
                ('city', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('mobile_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128)),
                ('is_newsletter', models.BooleanField(default=True)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.MyOrganisation')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_app.mypartner_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.AddField(
            model_name='row',
            name='table',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rows', to='app.Table'),
        ),
        migrations.AddField(
            model_name='mytimetable',
            name='responsible',
            field=models.ForeignKey(blank=True, limit_choices_to={'user_type': 'instructor'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_timetables', to=settings.AUTH_USER_MODEL, verbose_name='Responsible'),
        ),
        migrations.AddField(
            model_name='mytimetable',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='s_timetables', to='app.MySubject', verbose_name='Subject'),
        ),
        migrations.AddField(
            model_name='mytakensessionorquiz',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taken_session_or_quizs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mystudentanswer',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_answers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='myscholarship',
            name='student',
            field=models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='scholarship_lines', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='myscholarship',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scholarship_lines', to='app.MyScholarshipType'),
        ),
        migrations.AddField(
            model_name='myresultline',
            name='student',
            field=models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='result_lines', to=settings.AUTH_USER_MODEL, verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='myresultexamline',
            name='result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result_exam_lines', to='app.MyResultTemplateLine', verbose_name='Session Template'),
        ),
        migrations.AddField(
            model_name='myonlinequizquestion',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='app.MyOnlineSessionOrQuiz'),
        ),
        migrations.AddField(
            model_name='mymarksheetregister',
            name='generated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marksheet_registers', to=settings.AUTH_USER_MODEL, verbose_name='Generated By'),
        ),
        migrations.AddField(
            model_name='mymarksheetline',
            name='exam_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marksheet_lines', to='app.MyResultTemplateLine', verbose_name='Session Template'),
        ),
        migrations.AddField(
            model_name='mymarksheetline',
            name='marksheet_reg',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marksheet_lines', to='app.MyMarksheetRegister', verbose_name='Marksheet Register'),
        ),
        migrations.AddField(
            model_name='mymarksheetline',
            name='student',
            field=models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='marksheet_lines', to=settings.AUTH_USER_MODEL, verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='myexamroom',
            name='students',
            field=models.ManyToManyField(limit_choices_to={'user_type': 'student'}, related_name='exam_rooms', to=settings.AUTH_USER_MODEL, verbose_name='Student(s)'),
        ),
        migrations.AddField(
            model_name='myexamresallocation',
            name='exam_sessions',
            field=models.ManyToManyField(related_name='exams_res_allocations', to='app.MyExamSession', verbose_name='Select Exam Session'),
        ),
        migrations.AddField(
            model_name='myexamresallocation',
            name='exams',
            field=models.ManyToManyField(related_name='res_allocations', to='app.MyExam', verbose_name='Exam(s)'),
        ),
        migrations.AddField(
            model_name='myexamresallocation',
            name='responsible',
            field=models.ManyToManyField(limit_choices_to={'user_type': 'instructor'}, related_name='res_allocations', to=settings.AUTH_USER_MODEL, verbose_name='Responsible(s)'),
        ),
        migrations.AddField(
            model_name='myexamresallocation',
            name='students',
            field=models.ManyToManyField(limit_choices_to={'user_type': 'student'}, related_name='exams_res_allocations', to=settings.AUTH_USER_MODEL, verbose_name='Student(s)'),
        ),
        migrations.AddField(
            model_name='myexamattendees',
            name='student',
            field=models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='exams_attendees', to=settings.AUTH_USER_MODEL, verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='myexam',
            name='exam_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='app.MyExamType'),
        ),
        migrations.AddField(
            model_name='myexam',
            name='responsible',
            field=models.ManyToManyField(limit_choices_to=django.db.models.query_utils.Q(('user_type', 'school-teacher'), ('user_type', 'school-staff'), _connector='OR'), to=settings.AUTH_USER_MODEL, verbose_name='Responsible'),
        ),
        migrations.AddField(
            model_name='myexam',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='exams', to='app.MyExamSession'),
        ),
        migrations.AddField(
            model_name='myexam',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='exams', to='app.MySubject'),
        ),
        migrations.AddField(
            model_name='mybatch',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batchs', to='app.MyCourse'),
        ),
        migrations.AddField(
            model_name='myassignmentsubline',
            name='student',
            field=models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='assignment_sub_lines', to=settings.AUTH_USER_MODEL, verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='myassignment',
            name='allocated_to',
            field=models.ManyToManyField(limit_choices_to={'user_type': 'student'}, related_name='s_assignment_lines', to=settings.AUTH_USER_MODEL, verbose_name='Allocated To'),
        ),
        migrations.AddField(
            model_name='myassignment',
            name='assignment_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignment_lines', to='app.MyAssignmentType', verbose_name='Assignment Type'),
        ),
        migrations.AddField(
            model_name='myassignment',
            name='batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_lines', to='app.MyBatch', verbose_name='Batch'),
        ),
        migrations.AddField(
            model_name='myassignment',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_lines', to='app.MyCourse', verbose_name='Course'),
        ),
        migrations.AddField(
            model_name='myassignment',
            name='responsible',
            field=models.ForeignKey(blank='', limit_choices_to=django.db.models.query_utils.Q(('user_type', 'k4'), ('user_type', 'k4'), _connector='OR'), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='r_assignment_lines', to=settings.AUTH_USER_MODEL, verbose_name='Responsible'),
        ),
        migrations.AddField(
            model_name='myassignment',
            name='reviewer',
            field=models.ForeignKey(limit_choices_to={'user_type': 'instructor'}, on_delete=django.db.models.deletion.CASCADE, related_name='reviewer_assignment_lines', to=settings.AUTH_USER_MODEL, verbose_name='Reviewer'),
        ),
        migrations.AddField(
            model_name='myassignment',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_assignment_lines', to='app.MySubject', verbose_name='Subject'),
        ),
        migrations.AddField(
            model_name='myasset',
            name='classroom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_lines', to='app.MyClassroom', verbose_name='Asset'),
        ),
        migrations.AddField(
            model_name='myadmissionregister',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admission_registers', to='app.MyCourse', verbose_name='Course'),
        ),
        migrations.AddField(
            model_name='myadmission',
            name='batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admission_lines', to='app.MyBatch', verbose_name='Batch'),
        ),
        migrations.AddField(
            model_name='myadmission',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admission_lines', to='app.MyCourse', verbose_name='Course'),
        ),
        migrations.AddField(
            model_name='myadmission',
            name='prev_course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prev_admission_lines', to='app.MyCourse', verbose_name='Previous Course'),
        ),
        migrations.AddField(
            model_name='myadmission',
            name='register',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admission_lines', to='app.MyAdmissionRegister', verbose_name='Admission Register'),
        ),
        migrations.AddField(
            model_name='myadmission',
            name='student',
            field=models.ForeignKey(blank=True, limit_choices_to={'user_type': 'student'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admission_lines', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='myactivity',
            name='responsible',
            field=models.ManyToManyField(limit_choices_to={'user_type': 'instructor'}, related_name='responsible_for_activity_lines', to=settings.AUTH_USER_MODEL, verbose_name='Responsible'),
        ),
        migrations.AddField(
            model_name='myactivity',
            name='student',
            field=models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='activity_lines', to=settings.AUTH_USER_MODEL, verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='myactivity',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_lines', to='app.MyActivityType', verbose_name='Activity Type'),
        ),
        migrations.AddField(
            model_name='column',
            name='table',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='app.Table'),
        ),
        migrations.AddField(
            model_name='cell',
            name='column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Column'),
        ),
        migrations.AddField(
            model_name='cell',
            name='row',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Row'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='children', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
